apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.service.name }}
  labels:
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: {{ .Values.global.upgradeStrategy.type }}
    {{- if eq .Values.global.upgradeStrategy.type "RollingUpdate" }}
    rollingUpdate:
      maxSurge: {{ .Values.global.upgradeStrategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.global.upgradeStrategy.rollingUpdate.maxUnavailable }}
    {{- end }}
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}
      annotations:
        {{- if eq .Values.global.istio.enabled "on-auto-inj" }}
        sidecar.istio.io/inject: "true"
        {{- else }}
        sidecar.istio.io/inject: "false"
        {{- end }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: {{ .Values.global.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.service.port }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        env:
        - name: EECREATESUBSCRIPTIONPORT
          value: {{ .Values.service.port | quote}}
        - name: DBPROXYENDPOINT
          value: {{ printf "%s:%v" .Values.env.dbproxy.name .Values.env.dbproxy.port }}
        - name: PMPROXYENDPOINT
          value: {{ printf "localhost:%v" .Values.sidecars.pmproxy.env.grpcPort }}
        - name: LOGPROXYENDPOINT
          value: {{ printf "localhost:%v" .Values.sidecars.logproxy.env.port }}
        - name: LOGLEVEL
          value: {{ .Values.sidecars.logproxy.env.level | quote}}
        - name: HEALTHPROXYENDPOINT
          value: {{ printf "localhost:%v" .Values.sidecars.healthproxy.grpc.port }}
      - name: pmproxy
        image: {{ .Values.global.image.repository }}/{{ .Values.sidecars.pmproxy.image.name }}:{{ .Values.sidecars.pmproxy.image.tag }}
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.sidecars.pmproxy.env.grpcPort }}
        - containerPort: {{ .Values.sidecars.pmproxy.env.prometheusPort }}
      - name: logproxy
        image: {{ .Values.global.image.repository }}/{{ .Values.sidecars.logproxy.image.name }}:{{ .Values.sidecars.logproxy.image.tag }}
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.sidecars.logproxy.env.port }}
        env:
        - name: LOGPROXY_LISTEN_PORT
          value: {{ .Values.sidecars.logproxy.env.port | quote }}
      - name: healthproxy
        image: {{ .Values.global.image.repository }}/{{ .Values.sidecars.healthproxy.image.name }}:{{ .Values.sidecars.healthproxy.image.tag }}
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.sidecars.healthproxy.grpc.port }}
        - containerPort: {{ .Values.sidecars.healthproxy.http.port }}
        args:
        - -httpport
        - {{ .Values.sidecars.healthproxy.http.port | quote }}
        - -grpcport
        - {{ .Values.sidecars.healthproxy.grpc.port | quote }}
        readinessProbe:
          exec:
            command:
            - curl
            - -f
            - http://localhost:{{ .Values.sidecars.healthproxy.http.port }}/ready
          initialDelaySeconds: {{ .Values.sidecars.healthproxy.initialDelay }}
          periodSeconds: {{ .Values.sidecars.healthproxy.period }}
      restartPolicy: Always
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ .Values.service.name }}
              topologyKey: "kubernetes.io/hostname"
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ .Values.service.affinity }}
              topologyKey: "kubernetes.io/hostname"
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.service.name }}
  labels:
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
spec:
  type: {{ .Values.service.type }}
  ports:
  - name: http2
    port: {{ .Values.service.port }}
    targetPort: {{ .Values.service.port }}
  - name: http-metrics
    port: {{ .Values.sidecars.pmproxy.env.prometheusPort }}
    targetPort: {{ .Values.sidecars.pmproxy.env.prometheusPort }}
  selector:
    app: {{ .Values.service.name }}
